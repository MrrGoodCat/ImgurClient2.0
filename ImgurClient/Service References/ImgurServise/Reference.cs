//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImgurClient.ImgurServise {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ImgurServise.IImgurService")]
    public interface IImgurService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImgurService/DoWork", ReplyAction="http://tempuri.org/IImgurService/DoWorkResponse")]
        string DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImgurService/DoWork", ReplyAction="http://tempuri.org/IImgurService/DoWorkResponse")]
        System.Threading.Tasks.Task<string> DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImgurService/GetTopImages", ReplyAction="http://tempuri.org/IImgurService/GetTopImagesResponse")]
        string[] GetTopImages(int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImgurService/GetTopImages", ReplyAction="http://tempuri.org/IImgurService/GetTopImagesResponse")]
        System.Threading.Tasks.Task<string[]> GetTopImagesAsync(int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImgurService/GetAlbumById", ReplyAction="http://tempuri.org/IImgurService/GetAlbumByIdResponse")]
        string GetAlbumById(string albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImgurService/GetAlbumById", ReplyAction="http://tempuri.org/IImgurService/GetAlbumByIdResponse")]
        System.Threading.Tasks.Task<string> GetAlbumByIdAsync(string albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImgurService/GetAllAlbums", ReplyAction="http://tempuri.org/IImgurService/GetAllAlbumsResponse")]
        string[] GetAllAlbums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImgurService/GetAllAlbums", ReplyAction="http://tempuri.org/IImgurService/GetAllAlbumsResponse")]
        System.Threading.Tasks.Task<string[]> GetAllAlbumsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImgurService/GetAllImagesFromAlbum", ReplyAction="http://tempuri.org/IImgurService/GetAllImagesFromAlbumResponse")]
        string[] GetAllImagesFromAlbum(string albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImgurService/GetAllImagesFromAlbum", ReplyAction="http://tempuri.org/IImgurService/GetAllImagesFromAlbumResponse")]
        System.Threading.Tasks.Task<string[]> GetAllImagesFromAlbumAsync(string albumId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImgurServiceChannel : ImgurClient.ImgurServise.IImgurService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImgurServiceClient : System.ServiceModel.ClientBase<ImgurClient.ImgurServise.IImgurService>, ImgurClient.ImgurServise.IImgurService {
        
        public ImgurServiceClient() {
        }
        
        public ImgurServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImgurServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImgurServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImgurServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string DoWork() {
            return base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task<string> DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string[] GetTopImages(int count) {
            return base.Channel.GetTopImages(count);
        }
        
        public System.Threading.Tasks.Task<string[]> GetTopImagesAsync(int count) {
            return base.Channel.GetTopImagesAsync(count);
        }
        
        public string GetAlbumById(string albumId) {
            return base.Channel.GetAlbumById(albumId);
        }
        
        public System.Threading.Tasks.Task<string> GetAlbumByIdAsync(string albumId) {
            return base.Channel.GetAlbumByIdAsync(albumId);
        }
        
        public string[] GetAllAlbums() {
            return base.Channel.GetAllAlbums();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllAlbumsAsync() {
            return base.Channel.GetAllAlbumsAsync();
        }
        
        public string[] GetAllImagesFromAlbum(string albumId) {
            return base.Channel.GetAllImagesFromAlbum(albumId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllImagesFromAlbumAsync(string albumId) {
            return base.Channel.GetAllImagesFromAlbumAsync(albumId);
        }
    }
}
